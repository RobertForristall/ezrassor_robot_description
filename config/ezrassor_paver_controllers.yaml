# Ros2 control controllers for the basic ezrassor rover
controller_manager:
  ros__parameters:
    update_rate: 1000  # Hz
    use_sim_time: true

    # Joint state broadcaster to publish the 
    # joint states of the rover in simulation
    joint_state_broadcaster:
      type: joint_state_broadcaster/JointStateBroadcaster

    # differential drive controller for controlling the driving
    diff_drive_base_controller:
      type: diff_drive_controller/DiffDriveController

    # Drum arm controller
    arm_back_controller:
      type: effort_controllers/JointGroupEffortController
      #type: velocity_controllers/JointGroupVelocityController

    # Drum controller
    drum_back_controller:
      type: velocity_controllers/JointGroupVelocityController

    # Paver arm controller
    joint_trajectory_controller:
      type: joint_trajectory_controller/JointTrajectoryController

    # Gripper controller
    gripper_effort_controller:
      type: effort_controllers/JointGroupEffortController

diff_drive_base_controller:
  ros__parameters:
    left_wheel_names: ["left_wheel_front_joint", "left_wheel_back_joint"]
    right_wheel_names: ["right_wheel_front_joint", "right_wheel_back_joint"]

    wheel_separation: 1.25
    #wheels_per_side: 1  # actually 2, but both are controlled by 1 signal
    wheel_radius: 0.3

    wheel_separation_multiplier: 1.0
    left_wheel_radius_multiplier: 1.0
    right_wheel_radius_multiplier: 1.0

    publish_rate: 50.0
    odom_frame_id: odom
    base_frame_id: base_link
    pose_covariance_diagonal : [0.001, 0.001, 0.0, 0.0, 0.0, 0.01]
    twist_covariance_diagonal: [0.001, 0.0, 0.0, 0.0, 0.0, 0.01]

    open_loop: true
    enable_odom_tf: true

    cmd_vel_timeout: 0.5
    #publish_limited_velocity: true
    use_stamped_vel: false
    #velocity_rolling_window_size: 10

    # Velocity and acceleration limits
    # Whenever a min_* is unspecified, default to -max_*
    linear.x.has_velocity_limits: true
    linear.x.has_acceleration_limits: true
    linear.x.has_jerk_limits: false
    linear.x.max_velocity: 1.0
    linear.x.min_velocity: -1.0
    linear.x.max_acceleration: 1.0
    linear.x.max_jerk: 0.0
    linear.x.min_jerk: 0.0

    angular.z.has_velocity_limits: true
    angular.z.has_acceleration_limits: true
    angular.z.has_jerk_limits: false
    angular.z.max_velocity: 1.0
    angular.z.min_velocity: -1.0
    angular.z.max_acceleration: 1.0
    angular.z.min_acceleration: -1.0
    angular.z.max_jerk: 0.0
    angular.z.min_jerk: 0.0

arm_back_controller:
  ros__parameters:
    joints:
      - arm_back_joint
    command_interfaces:
      - effort
    #  - velocity
    state_interfaces:
      - position
      - velocity
      - effort
    pid: {p: 100.0, i: 0.01, d: 10.0}

drum_back_controller:
  ros__parameters:
    joints:
      - drum_back_joint
    command_interfaces:
      - velocity
    state_interfaces:
      - position
      - velocity

joint_trajectory_controller:
  ros__parameters:
    joints:
      - joint1
      - joint2
      - joint3
      - joint4
      - joint5

    command_interfaces:
      - position

    state_interfaces:
      - position
      - velocity

    state_publish_rate: 50.0
    action_monitor_rate: 20.0

    allow_partial_joints_goal: false
    open_loop_control: true
    constraints:
      stopped_velocity_tolerance: 0.01
      goal_time: 0.0
      joint1:
        trajectory: 0.05
        goal: 0.03
    gains:
      joint1: {p: 100.0, d: 0.0, i: 0.0}
      joint2: {p: 100.0, d: 0.0, i: 0.0}
      joint3: {p: 100.0, d: 0.0, i: 0.0}
      joint4: {p: 100.0, d: 0.0, i: 0.0}
      joint5: {p: 100.0, d: 0.0, i: 0.0}

gripper_effort_controller:
  ros__parameters:
    joints:
      - grabber_joint1
      - grabber_joint2
    pid: {p: 100.0, i: 0.01, d: 10.0}